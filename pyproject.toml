[tool.poetry]
name = "role-reaper"
version = "0.1.0"
description = "A tool for managing AWS IAM roles, including enabling, disabling, deleting, and restoring roles."
authors = ["Billy Bryant <billy@rmdash.fr>"]
license = "MIT"
readme = "README.md"
packages = [{include = "lambda"}]

[tool.poetry.scripts]
role-disabler = "lambda.roleDisabler:main"
role-reaper = "lambda.index:main"

[tool.poetry.dependencies]
python = "^3.12"
boto3 = "1.34.81"
botocore = "1.34.81"
pandas = "2.2.3"
tqdm = "4.66.4"
structlog = "23.1.0"

[tool.poetry.dev-dependencies]
pytest = "^7.0"
black = "^25.1"
flake8 = "^6.0"
mypy = "^1.0"
isort = "^6.0.0"
pre-commit = "^3.4.0"
autoflake = "^2.2.1"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | env
  | venv
  | dist
  | build
  | __pycache__
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.eggs
  | \*.egg-info
)/
'''

[tool.isort]
profile = "black"
line_length = 160
known_first_party = ["lambda"]
known_third_party = ["boto3", "botocore", "pandas", "tqdm", "structlog"]
default_section = "THIRDPARTY"
force_single_line = true

[tool.flake8]
max-line-length = 160
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    ".venv",
    "env",
    "venv",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.12"
files = ["lambda"]
ignore_missing_imports = true
strict = true
show_error_codes = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
